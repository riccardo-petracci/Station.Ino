// header{
//     margin-top: 0;
//     margin-bottom: 5%;
//     // text-align: center;
//     font-family: 'Times New Roman', Times, serif;
//     font-size: x-large;
// }

.example-container {
    display: flex;
    flex-direction: column;
    position: absolute; //il problema di questo comando è che se lo togli non funziona il click fuori dalla sidebar però funziona bene app.component con appheader ruoteroutlet e footer
                        //se invece metti absolute devi andare a mettere dentro sidenav-content il contenuto della sidenav ovvero il router-outlet e il footer...non so se va bene lo stesso oppure è sbagliato
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }

  mat-nav-list{
    width: 150px;
  }

  mat-icon{
    margin-right: 5%;
    margin-left: 5%;
  }

  mat-divider{
    margin-top: 5%;
    margin-bottom: 5%;
  }
  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }

  @media all and (max-width: 500px) {

  }
  